/*
 * DesktopApplication1View.java
 */
package es.lda.cobi.zes;

import es.lda.core.exception.DriverException;
import es.lda.core.exception.UnsupportedDriverOperation;
import es.lda.core.lib.driver.IDriver;
import es.lda.core.lib.driver.zes.impl.ZESImpl;
import es.lda.core.lib.driver.zes.impl.ZESStatus;
import es.lda.core.lib.util.TimeStamp;
import org.jdesktop.application.Action;
import org.jdesktop.application.ResourceMap;
import org.jdesktop.application.SingleFrameApplication;
import org.jdesktop.application.FrameView;
import org.jdesktop.application.Task;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.Map;
import javax.swing.Timer;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JDialog;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/**
 * The application's main frame.
 */
public class DesktopApplication1View extends FrameView {

    public DesktopApplication1View(SingleFrameApplication app) {
        super(app);

        initComponents();

        deshabilitarBotones();
        ini();

        this.getFrame().setResizable(false);

        // status bar initialization - message timeout, idle icon and busy animation, etc
        ResourceMap resourceMap = getResourceMap();
        int messageTimeout = resourceMap.getInteger("StatusBar.messageTimeout");
        messageTimer = new Timer(messageTimeout, new ActionListener() {

            public void actionPerformed(ActionEvent e) {
                statusMessageLabel.setText("");
            }
        });
        messageTimer.setRepeats(false);
        int busyAnimationRate = resourceMap.getInteger("StatusBar.busyAnimationRate");
        for (int i = 0; i < busyIcons.length; i++) {
            busyIcons[i] = resourceMap.getIcon("StatusBar.busyIcons[" + i + "]");
        }
        busyIconTimer = new Timer(busyAnimationRate, new ActionListener() {

            public void actionPerformed(ActionEvent e) {
                busyIconIndex = (busyIconIndex + 1) % busyIcons.length;
                statusAnimationLabel.setIcon(busyIcons[busyIconIndex]);
            }
        });
        idleIcon = resourceMap.getIcon("StatusBar.idleIcon");
        statusAnimationLabel.setIcon(idleIcon);

    }

    @Action
    public void showAboutBox() {
        if (aboutBox == null) {
            JFrame mainFrame = DesktopApplication1.getApplication().getMainFrame();
            aboutBox = new DesktopApplication1AboutBox(mainFrame);
            aboutBox.setLocationRelativeTo(mainFrame);
        }
        DesktopApplication1.getApplication().show(aboutBox);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainPanel = new javax.swing.JPanel();
        jTfIP = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        btnConnect = new javax.swing.JButton();
        btnDisconnect = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JSeparator();
        estado = new javax.swing.JLabel();
        btnDispose = new javax.swing.JButton();
        btnClose = new javax.swing.JButton();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel9 = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();
        btnPGetConfigAtenuadores = new javax.swing.JButton();
        btnPGetComunicaciones485 = new javax.swing.JButton();
        btnPGetCompresorThreshold = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        btnPGetLimitadorRelease = new javax.swing.JButton();
        btnPGetLimitadorRatio = new javax.swing.JButton();
        btnPGetLimitadorBypass = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        btnPGetDatoDSP = new javax.swing.JButton();
        btnPGetConfigGestionAutomaticaMicrofonos = new javax.swing.JButton();
        btnPGetConfigCierres = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        btnPGetCompresorSoftknee = new javax.swing.JButton();
        btnPGetCompresorRelease = new javax.swing.JButton();
        btnPGetCompresorRatio = new javax.swing.JButton();
        jPanel7 = new javax.swing.JPanel();
        btnPGetLimitadorAttack = new javax.swing.JButton();
        btnPGetGananciaCFS = new javax.swing.JButton();
        btnPGetGananciaCFE = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        btnPGetCompresorBypass = new javax.swing.JButton();
        btnPGetCompresorAttack = new javax.swing.JButton();
        btnPGetCierre = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        btnPGetBundleSalida = new javax.swing.JButton();
        btnPGetBundleEntrada = new javax.swing.JButton();
        btnPGetAtenuador24V = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        btnPGetAmplificador = new javax.swing.JButton();
        btnFbDSPActivo = new javax.swing.JButton();
        btnEstadoConexionEquipo = new javax.swing.JButton();
        jPanel19 = new javax.swing.JPanel();
        jPanel20 = new javax.swing.JPanel();
        btnPGetVumetroCS = new javax.swing.JButton();
        btnPGetVumetroCE = new javax.swing.JButton();
        btnPGetTxSubMap = new javax.swing.JButton();
        jPanel23 = new javax.swing.JPanel();
        btnPGetTonoMaster = new javax.swing.JButton();
        btnPGetTonoFrec = new javax.swing.JButton();
        btnPGetTono = new javax.swing.JButton();
        jPanel25 = new javax.swing.JPanel();
        btnPGetTemperatura = new javax.swing.JButton();
        btnPGetSalida = new javax.swing.JButton();
        btnPGetSDProtect = new javax.swing.JButton();
        jPanel26 = new javax.swing.JPanel();
        btnPGetSDIn = new javax.swing.JButton();
        btnPGetRxSubMap = new javax.swing.JButton();
        btnPGetModExpansionIn = new javax.swing.JButton();
        jPanel27 = new javax.swing.JPanel();
        btnPGetMP3 = new javax.swing.JButton();
        btnPGetLimitadorThreshold = new javax.swing.JButton();
        btnPGetLimitadorSoftknee = new javax.swing.JButton();
        jPanel21 = new javax.swing.JPanel();
        btnMP3In = new javax.swing.JButton();
        jPanel28 = new javax.swing.JPanel();
        jPanel29 = new javax.swing.JPanel();
        PSetReset = new javax.swing.JButton();
        btnPSetPreset = new javax.swing.JButton();
        btnPSetMP3 = new javax.swing.JButton();
        jPanel31 = new javax.swing.JPanel();
        btnPSetTxSubMap = new javax.swing.JButton();
        btnPSetSalida = new javax.swing.JButton();
        btnPSetRxSubMap = new javax.swing.JButton();
        jPanel32 = new javax.swing.JPanel();
        btnPSetGananciaCFS = new javax.swing.JButton();
        btnPSetGananciaCFE = new javax.swing.JButton();
        btnPSetDatoDSP = new javax.swing.JButton();
        jPanel33 = new javax.swing.JPanel();
        btnPSetTonoMaster = new javax.swing.JButton();
        btnPSetTonoFrec = new javax.swing.JButton();
        btnPSetTono = new javax.swing.JButton();
        jPanel34 = new javax.swing.JPanel();
        btnPSetConfigGestionAutomaticaMicrofonos = new javax.swing.JButton();
        btnPSetConfigCierres = new javax.swing.JButton();
        btnPSetConfigAtenuadores = new javax.swing.JButton();
        jPanel35 = new javax.swing.JPanel();
        btnPGetBundleSalida3 = new javax.swing.JButton();
        btnPGetBundleEntrada3 = new javax.swing.JButton();
        btnPSetBundleSalida = new javax.swing.JButton();
        jPanel36 = new javax.swing.JPanel();
        btnPSetBundleEntrada = new javax.swing.JButton();
        btnPSetAtenuador24V = new javax.swing.JButton();
        btnPSetAmplificador = new javax.swing.JButton();
        jPanel10 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jTConsole = new javax.swing.JTextField();
        menuBar = new javax.swing.JMenuBar();
        javax.swing.JMenu fileMenu = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        javax.swing.JMenuItem exitMenuItem = new javax.swing.JMenuItem();
        javax.swing.JMenu helpMenu = new javax.swing.JMenu();
        javax.swing.JMenuItem aboutMenuItem = new javax.swing.JMenuItem();
        statusPanel = new javax.swing.JPanel();
        javax.swing.JSeparator statusPanelSeparator = new javax.swing.JSeparator();
        statusMessageLabel = new javax.swing.JLabel();
        statusAnimationLabel = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLConsole = new javax.swing.JLabel();

        mainPanel.setMaximumSize(new java.awt.Dimension(668, 418));
        mainPanel.setMinimumSize(new java.awt.Dimension(668, 418));
        mainPanel.setName("mainPanel"); // NOI18N

        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(es.lda.cobi.zes.DesktopApplication1.class).getContext().getResourceMap(DesktopApplication1View.class);
        jTfIP.setText(resourceMap.getString("jTfIP.text")); // NOI18N
        jTfIP.setName("jTfIP"); // NOI18N

        jLabel1.setText(resourceMap.getString("jLabel1.text")); // NOI18N
        jLabel1.setName("jLabel1"); // NOI18N

        javax.swing.ActionMap actionMap = org.jdesktop.application.Application.getInstance(es.lda.cobi.zes.DesktopApplication1.class).getContext().getActionMap(DesktopApplication1View.class, this);
        btnConnect.setAction(actionMap.get("connectAction")); // NOI18N
        btnConnect.setMaximumSize(new java.awt.Dimension(65, 65));
        btnConnect.setMinimumSize(new java.awt.Dimension(65, 65));
        btnConnect.setName("btnConnect"); // NOI18N
        btnConnect.setPreferredSize(new java.awt.Dimension(65, 65));

        btnDisconnect.setAction(actionMap.get("disconnectAction")); // NOI18N
        btnDisconnect.setMaximumSize(new java.awt.Dimension(65, 65));
        btnDisconnect.setMinimumSize(new java.awt.Dimension(65, 65));
        btnDisconnect.setName("btnDisconnect"); // NOI18N
        btnDisconnect.setPreferredSize(new java.awt.Dimension(65, 65));

        jSeparator2.setName("jSeparator2"); // NOI18N

        estado.setText(resourceMap.getString("estado.text")); // NOI18N
        estado.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        estado.setMaximumSize(new java.awt.Dimension(65, 65));
        estado.setMinimumSize(new java.awt.Dimension(65, 65));
        estado.setName("estado"); // NOI18N
        estado.setPreferredSize(new java.awt.Dimension(65, 65));

        btnDispose.setAction(actionMap.get("Dispose")); // NOI18N
        btnDispose.setMaximumSize(new java.awt.Dimension(65, 65));
        btnDispose.setMinimumSize(new java.awt.Dimension(65, 65));
        btnDispose.setName("btnDispose"); // NOI18N
        btnDispose.setPreferredSize(new java.awt.Dimension(65, 65));

        btnClose.setAction(actionMap.get("Close")); // NOI18N
        btnClose.setMaximumSize(new java.awt.Dimension(65, 65));
        btnClose.setMinimumSize(new java.awt.Dimension(65, 65));
        btnClose.setName("btnClose"); // NOI18N
        btnClose.setPreferredSize(new java.awt.Dimension(65, 65));

        jTabbedPane1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jTabbedPane1.setName("jTabbedPane1"); // NOI18N

        jPanel9.setName("jPanel9"); // NOI18N

        jPanel8.setName("jPanel8"); // NOI18N

        btnPGetConfigAtenuadores.setAction(actionMap.get("PGetConfigAtenuadores")); // NOI18N
        btnPGetConfigAtenuadores.setText(resourceMap.getString("btnPGetConfigAtenuadores.text")); // NOI18N
        btnPGetConfigAtenuadores.setName("btnPGetConfigAtenuadores"); // NOI18N

        btnPGetComunicaciones485.setAction(actionMap.get("PGetComunicaciones485")); // NOI18N
        btnPGetComunicaciones485.setText(resourceMap.getString("btnPGetComunicaciones485.text")); // NOI18N
        btnPGetComunicaciones485.setName("btnPGetComunicaciones485"); // NOI18N

        btnPGetCompresorThreshold.setAction(actionMap.get("PGetCompresorThreshold")); // NOI18N
        btnPGetCompresorThreshold.setText(resourceMap.getString("btnPGetCompresorThreshold.text")); // NOI18N
        btnPGetCompresorThreshold.setName("btnPGetCompresorThreshold"); // NOI18N

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 163, Short.MAX_VALUE)
            .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel8Layout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(btnPGetComunicaciones485, javax.swing.GroupLayout.DEFAULT_SIZE, 143, Short.MAX_VALUE)
                        .addComponent(btnPGetCompresorThreshold, javax.swing.GroupLayout.DEFAULT_SIZE, 143, Short.MAX_VALUE)
                        .addComponent(btnPGetConfigAtenuadores, javax.swing.GroupLayout.DEFAULT_SIZE, 143, Short.MAX_VALUE))
                    .addContainerGap()))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 111, Short.MAX_VALUE)
            .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel8Layout.createSequentialGroup()
                    .addGap(9, 9, 9)
                    .addComponent(btnPGetCompresorThreshold)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(btnPGetComunicaciones485)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(btnPGetConfigAtenuadores)
                    .addContainerGap(21, Short.MAX_VALUE)))
        );

        jPanel6.setName("jPanel6"); // NOI18N

        btnPGetLimitadorRelease.setAction(actionMap.get("PGetLimitadorRelease")); // NOI18N
        btnPGetLimitadorRelease.setName("btnPGetLimitadorRelease"); // NOI18N

        btnPGetLimitadorRatio.setAction(actionMap.get("PGetLimitadorRatio")); // NOI18N
        btnPGetLimitadorRatio.setName("btnPGetLimitadorRatio"); // NOI18N

        btnPGetLimitadorBypass.setAction(actionMap.get("PGetLimitadorBypass")); // NOI18N
        btnPGetLimitadorBypass.setName("btnPGetLimitadorBypass"); // NOI18N

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 171, Short.MAX_VALUE)
            .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel6Layout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(btnPGetLimitadorRelease, javax.swing.GroupLayout.DEFAULT_SIZE, 151, Short.MAX_VALUE)
                        .addComponent(btnPGetLimitadorRatio, javax.swing.GroupLayout.DEFAULT_SIZE, 151, Short.MAX_VALUE)
                        .addComponent(btnPGetLimitadorBypass, javax.swing.GroupLayout.DEFAULT_SIZE, 151, Short.MAX_VALUE))
                    .addContainerGap()))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 101, Short.MAX_VALUE)
            .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel6Layout.createSequentialGroup()
                    .addGap(9, 9, 9)
                    .addComponent(btnPGetLimitadorBypass)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(btnPGetLimitadorRatio)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(btnPGetLimitadorRelease)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        jPanel3.setName("jPanel3"); // NOI18N

        btnPGetDatoDSP.setAction(actionMap.get("PGetDatoDSP")); // NOI18N
        btnPGetDatoDSP.setName("btnPGetDatoDSP"); // NOI18N

        btnPGetConfigGestionAutomaticaMicrofonos.setAction(actionMap.get("PGetConfigGestionAutomaticaMicrofonos")); // NOI18N
        btnPGetConfigGestionAutomaticaMicrofonos.setText(resourceMap.getString("btnPGetConfigGestionAutomaticaMicrofonos.text")); // NOI18N
        btnPGetConfigGestionAutomaticaMicrofonos.setName("btnPGetConfigGestionAutomaticaMicrofonos"); // NOI18N

        btnPGetConfigCierres.setAction(actionMap.get("PGetConfigCierres")); // NOI18N
        btnPGetConfigCierres.setText(resourceMap.getString("btnPGetConfigCierres.text")); // NOI18N
        btnPGetConfigCierres.setName("btnPGetConfigCierres"); // NOI18N

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 163, Short.MAX_VALUE)
            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel3Layout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(btnPGetDatoDSP, javax.swing.GroupLayout.DEFAULT_SIZE, 143, Short.MAX_VALUE)
                        .addComponent(btnPGetConfigGestionAutomaticaMicrofonos, javax.swing.GroupLayout.DEFAULT_SIZE, 143, Short.MAX_VALUE)
                        .addComponent(btnPGetConfigCierres, javax.swing.GroupLayout.DEFAULT_SIZE, 143, Short.MAX_VALUE))
                    .addContainerGap()))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 111, Short.MAX_VALUE)
            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel3Layout.createSequentialGroup()
                    .addGap(9, 9, 9)
                    .addComponent(btnPGetConfigCierres)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(btnPGetConfigGestionAutomaticaMicrofonos)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(btnPGetDatoDSP)
                    .addContainerGap(21, Short.MAX_VALUE)))
        );

        jPanel5.setName("jPanel5"); // NOI18N

        btnPGetCompresorSoftknee.setAction(actionMap.get("PGetCompresorSoftknee")); // NOI18N
        btnPGetCompresorSoftknee.setText(resourceMap.getString("btnPGetCompresorSoftknee.text")); // NOI18N
        btnPGetCompresorSoftknee.setName("btnPGetCompresorSoftknee"); // NOI18N

        btnPGetCompresorRelease.setAction(actionMap.get("PGetCompresorRelease")); // NOI18N
        btnPGetCompresorRelease.setName("btnPGetCompresorRelease"); // NOI18N

        btnPGetCompresorRatio.setAction(actionMap.get("PGetCompresorRatio")); // NOI18N
        btnPGetCompresorRatio.setText(resourceMap.getString("btnPGetCompresorRatio.text")); // NOI18N
        btnPGetCompresorRatio.setName("btnPGetCompresorRatio"); // NOI18N

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 171, Short.MAX_VALUE)
            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel5Layout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(btnPGetCompresorSoftknee, javax.swing.GroupLayout.DEFAULT_SIZE, 151, Short.MAX_VALUE)
                        .addComponent(btnPGetCompresorRelease, javax.swing.GroupLayout.DEFAULT_SIZE, 151, Short.MAX_VALUE)
                        .addComponent(btnPGetCompresorRatio, javax.swing.GroupLayout.DEFAULT_SIZE, 151, Short.MAX_VALUE))
                    .addContainerGap()))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 104, Short.MAX_VALUE)
            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel5Layout.createSequentialGroup()
                    .addGap(9, 9, 9)
                    .addComponent(btnPGetCompresorRatio)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(btnPGetCompresorRelease)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(btnPGetCompresorSoftknee)
                    .addContainerGap(14, Short.MAX_VALUE)))
        );

        jPanel7.setName("jPanel7"); // NOI18N

        btnPGetLimitadorAttack.setAction(actionMap.get("PGetLimitadorAttack")); // NOI18N
        btnPGetLimitadorAttack.setName("btnPGetLimitadorAttack"); // NOI18N

        btnPGetGananciaCFS.setAction(actionMap.get("PGetGananciaCFS")); // NOI18N
        btnPGetGananciaCFS.setName("btnPGetGananciaCFS"); // NOI18N

        btnPGetGananciaCFE.setAction(actionMap.get("PGetGananciaCFE")); // NOI18N
        btnPGetGananciaCFE.setName("btnPGetGananciaCFE"); // NOI18N

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 163, Short.MAX_VALUE)
            .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel7Layout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(btnPGetLimitadorAttack, javax.swing.GroupLayout.DEFAULT_SIZE, 143, Short.MAX_VALUE)
                        .addComponent(btnPGetGananciaCFS, javax.swing.GroupLayout.DEFAULT_SIZE, 143, Short.MAX_VALUE)
                        .addComponent(btnPGetGananciaCFE, javax.swing.GroupLayout.DEFAULT_SIZE, 143, Short.MAX_VALUE))
                    .addContainerGap()))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 111, Short.MAX_VALUE)
            .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel7Layout.createSequentialGroup()
                    .addGap(9, 9, 9)
                    .addComponent(btnPGetGananciaCFE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(btnPGetGananciaCFS)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(btnPGetLimitadorAttack)
                    .addContainerGap(21, Short.MAX_VALUE)))
        );

        jPanel4.setName("jPanel4"); // NOI18N

        btnPGetCompresorBypass.setAction(actionMap.get("PGetCompresorBypass")); // NOI18N
        btnPGetCompresorBypass.setText(resourceMap.getString("btnPGetCompresorBypass.text")); // NOI18N
        btnPGetCompresorBypass.setName("btnPGetCompresorBypass"); // NOI18N

        btnPGetCompresorAttack.setAction(actionMap.get("PGetCompresorAttack")); // NOI18N
        btnPGetCompresorAttack.setText(resourceMap.getString("btnPGetCompresorAttack.text")); // NOI18N
        btnPGetCompresorAttack.setName("btnPGetCompresorAttack"); // NOI18N

        btnPGetCierre.setAction(actionMap.get("PGetCierre")); // NOI18N
        btnPGetCierre.setText(resourceMap.getString("btnPGetCierre.text")); // NOI18N
        btnPGetCierre.setName("btnPGetCierre"); // NOI18N

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 161, Short.MAX_VALUE)
            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel4Layout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(btnPGetCompresorBypass, javax.swing.GroupLayout.DEFAULT_SIZE, 141, Short.MAX_VALUE)
                        .addComponent(btnPGetCompresorAttack, javax.swing.GroupLayout.DEFAULT_SIZE, 141, Short.MAX_VALUE)
                        .addComponent(btnPGetCierre, javax.swing.GroupLayout.DEFAULT_SIZE, 141, Short.MAX_VALUE))
                    .addContainerGap()))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 104, Short.MAX_VALUE)
            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel4Layout.createSequentialGroup()
                    .addGap(9, 9, 9)
                    .addComponent(btnPGetCierre)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(btnPGetCompresorAttack)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(btnPGetCompresorBypass)
                    .addContainerGap(14, Short.MAX_VALUE)))
        );

        jPanel2.setName("jPanel2"); // NOI18N

        btnPGetBundleSalida.setAction(actionMap.get("PGetBundleSalida")); // NOI18N
        btnPGetBundleSalida.setText(resourceMap.getString("btnPGetBundleSalida.text")); // NOI18N
        btnPGetBundleSalida.setName("btnPGetBundleSalida"); // NOI18N

        btnPGetBundleEntrada.setAction(actionMap.get("PGetBundleEntrada")); // NOI18N
        btnPGetBundleEntrada.setText(resourceMap.getString("btnPGetBundleEntrada.text")); // NOI18N
        btnPGetBundleEntrada.setName("btnPGetBundleEntrada"); // NOI18N

        btnPGetAtenuador24V.setAction(actionMap.get("EstadoConexionEquipo")); // NOI18N
        btnPGetAtenuador24V.setText(resourceMap.getString("btnPGetAtenuador24V.text")); // NOI18N
        btnPGetAtenuador24V.setName("btnPGetAtenuador24V"); // NOI18N

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 163, Short.MAX_VALUE)
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(btnPGetBundleSalida, javax.swing.GroupLayout.DEFAULT_SIZE, 143, Short.MAX_VALUE)
                        .addComponent(btnPGetBundleEntrada, javax.swing.GroupLayout.DEFAULT_SIZE, 143, Short.MAX_VALUE)
                        .addComponent(btnPGetAtenuador24V, javax.swing.GroupLayout.DEFAULT_SIZE, 143, Short.MAX_VALUE))
                    .addContainerGap()))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 101, Short.MAX_VALUE)
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addGap(9, 9, 9)
                    .addComponent(btnPGetAtenuador24V)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(btnPGetBundleEntrada)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(btnPGetBundleSalida)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        jPanel1.setName("jPanel1"); // NOI18N

        btnPGetAmplificador.setAction(actionMap.get("PGetAmplificador")); // NOI18N
        btnPGetAmplificador.setText(resourceMap.getString("btnPGetAmplificador.text")); // NOI18N
        btnPGetAmplificador.setName("btnPGetAmplificador"); // NOI18N

        btnFbDSPActivo.setAction(actionMap.get("FbDSPActivo")); // NOI18N
        btnFbDSPActivo.setName("btnFbDSPActivo"); // NOI18N

        btnEstadoConexionEquipo.setAction(actionMap.get("EstadoConexionEquipo")); // NOI18N
        btnEstadoConexionEquipo.setText(resourceMap.getString("btnEstadoConexionEquipo.text")); // NOI18N
        btnEstadoConexionEquipo.setName("btnEstadoConexionEquipo"); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 163, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(btnPGetAmplificador, javax.swing.GroupLayout.DEFAULT_SIZE, 143, Short.MAX_VALUE)
                        .addComponent(btnFbDSPActivo, javax.swing.GroupLayout.DEFAULT_SIZE, 143, Short.MAX_VALUE)
                        .addComponent(btnEstadoConexionEquipo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addContainerGap()))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 101, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addGap(9, 9, 9)
                    .addComponent(btnEstadoConexionEquipo)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(btnFbDSPActivo)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(btnPGetAmplificador)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(29, 29, 29))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jTabbedPane1.addTab(resourceMap.getString("jPanel9.TabConstraints.tabTitle"), jPanel9); // NOI18N

        jPanel19.setName("jPanel19"); // NOI18N

        jPanel20.setName("jPanel20"); // NOI18N

        btnPGetVumetroCS.setAction(actionMap.get("PGetVumetroCS")); // NOI18N
        btnPGetVumetroCS.setText(resourceMap.getString("btnPGetVumetroCS.text")); // NOI18N
        btnPGetVumetroCS.setName("btnPGetVumetroCS"); // NOI18N

        btnPGetVumetroCE.setAction(actionMap.get("PGetVumetroCE")); // NOI18N
        btnPGetVumetroCE.setText(resourceMap.getString("btnPGetVumetroCE.text")); // NOI18N
        btnPGetVumetroCE.setName("btnPGetVumetroCE"); // NOI18N

        btnPGetTxSubMap.setAction(actionMap.get("PGetTxSubMap")); // NOI18N
        btnPGetTxSubMap.setText(resourceMap.getString("btnPGetTxSubMap.text")); // NOI18N
        btnPGetTxSubMap.setName("btnPGetTxSubMap"); // NOI18N

        javax.swing.GroupLayout jPanel20Layout = new javax.swing.GroupLayout(jPanel20);
        jPanel20.setLayout(jPanel20Layout);
        jPanel20Layout.setHorizontalGroup(
            jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 163, Short.MAX_VALUE)
            .addGroup(jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel20Layout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(btnPGetVumetroCE, javax.swing.GroupLayout.DEFAULT_SIZE, 143, Short.MAX_VALUE)
                        .addComponent(btnPGetTxSubMap, javax.swing.GroupLayout.DEFAULT_SIZE, 143, Short.MAX_VALUE)
                        .addComponent(btnPGetVumetroCS, javax.swing.GroupLayout.DEFAULT_SIZE, 143, Short.MAX_VALUE))
                    .addContainerGap()))
        );
        jPanel20Layout.setVerticalGroup(
            jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 111, Short.MAX_VALUE)
            .addGroup(jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel20Layout.createSequentialGroup()
                    .addGap(9, 9, 9)
                    .addComponent(btnPGetTxSubMap)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(btnPGetVumetroCE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(btnPGetVumetroCS)
                    .addContainerGap(21, Short.MAX_VALUE)))
        );

        jPanel23.setName("jPanel23"); // NOI18N

        btnPGetTonoMaster.setAction(actionMap.get("PGetTonoMaster")); // NOI18N
        btnPGetTonoMaster.setText(resourceMap.getString("btnPGetTonoMaster.text")); // NOI18N
        btnPGetTonoMaster.setName("btnPGetTonoMaster"); // NOI18N

        btnPGetTonoFrec.setAction(actionMap.get("PGetTonoFrec")); // NOI18N
        btnPGetTonoFrec.setText(resourceMap.getString("btnPGetTonoFrec.text")); // NOI18N
        btnPGetTonoFrec.setName("btnPGetTonoFrec"); // NOI18N

        btnPGetTono.setAction(actionMap.get("PGetTono")); // NOI18N
        btnPGetTono.setText(resourceMap.getString("btnPGetTono.text")); // NOI18N
        btnPGetTono.setName("btnPGetTono"); // NOI18N

        javax.swing.GroupLayout jPanel23Layout = new javax.swing.GroupLayout(jPanel23);
        jPanel23.setLayout(jPanel23Layout);
        jPanel23Layout.setHorizontalGroup(
            jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 171, Short.MAX_VALUE)
            .addGroup(jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel23Layout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(btnPGetTonoMaster, javax.swing.GroupLayout.DEFAULT_SIZE, 151, Short.MAX_VALUE)
                        .addComponent(btnPGetTonoFrec, javax.swing.GroupLayout.DEFAULT_SIZE, 151, Short.MAX_VALUE)
                        .addComponent(btnPGetTono, javax.swing.GroupLayout.DEFAULT_SIZE, 151, Short.MAX_VALUE))
                    .addContainerGap()))
        );
        jPanel23Layout.setVerticalGroup(
            jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 101, Short.MAX_VALUE)
            .addGroup(jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel23Layout.createSequentialGroup()
                    .addGap(9, 9, 9)
                    .addComponent(btnPGetTono)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(btnPGetTonoFrec)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(btnPGetTonoMaster)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        jPanel25.setName("jPanel25"); // NOI18N

        btnPGetTemperatura.setAction(actionMap.get("PGetTemperatura")); // NOI18N
        btnPGetTemperatura.setText(resourceMap.getString("btnPGetTemperatura.text")); // NOI18N
        btnPGetTemperatura.setName("btnPGetTemperatura"); // NOI18N

        btnPGetSalida.setAction(actionMap.get("PGetSalida")); // NOI18N
        btnPGetSalida.setText(resourceMap.getString("btnPGetSalida.text")); // NOI18N
        btnPGetSalida.setName("btnPGetSalida"); // NOI18N

        btnPGetSDProtect.setAction(actionMap.get("PGetSDProtect")); // NOI18N
        btnPGetSDProtect.setText(resourceMap.getString("btnPGetSDProtect.text")); // NOI18N
        btnPGetSDProtect.setName("btnPGetSDProtect"); // NOI18N

        javax.swing.GroupLayout jPanel25Layout = new javax.swing.GroupLayout(jPanel25);
        jPanel25.setLayout(jPanel25Layout);
        jPanel25Layout.setHorizontalGroup(
            jPanel25Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 163, Short.MAX_VALUE)
            .addGroup(jPanel25Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel25Layout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(jPanel25Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(btnPGetTemperatura, javax.swing.GroupLayout.DEFAULT_SIZE, 143, Short.MAX_VALUE)
                        .addComponent(btnPGetSalida, javax.swing.GroupLayout.DEFAULT_SIZE, 143, Short.MAX_VALUE)
                        .addComponent(btnPGetSDProtect, javax.swing.GroupLayout.DEFAULT_SIZE, 143, Short.MAX_VALUE))
                    .addContainerGap()))
        );
        jPanel25Layout.setVerticalGroup(
            jPanel25Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 104, Short.MAX_VALUE)
            .addGroup(jPanel25Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel25Layout.createSequentialGroup()
                    .addGap(9, 9, 9)
                    .addComponent(btnPGetSDProtect)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(btnPGetSalida)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(btnPGetTemperatura)
                    .addContainerGap(14, Short.MAX_VALUE)))
        );

        jPanel26.setName("jPanel26"); // NOI18N

        btnPGetSDIn.setAction(actionMap.get("PGetSDIn")); // NOI18N
        btnPGetSDIn.setText(resourceMap.getString("btnPGetSDIn.text")); // NOI18N
        btnPGetSDIn.setName("btnPGetSDIn"); // NOI18N

        btnPGetRxSubMap.setAction(actionMap.get("PGetRxSubMap")); // NOI18N
        btnPGetRxSubMap.setText(resourceMap.getString("btnPGetRxSubMap.text")); // NOI18N
        btnPGetRxSubMap.setName("btnPGetRxSubMap"); // NOI18N

        btnPGetModExpansionIn.setAction(actionMap.get("PGetModExpansionIn")); // NOI18N
        btnPGetModExpansionIn.setText(resourceMap.getString("btnPGetModExpansionIn.text")); // NOI18N
        btnPGetModExpansionIn.setName("btnPGetModExpansionIn"); // NOI18N

        javax.swing.GroupLayout jPanel26Layout = new javax.swing.GroupLayout(jPanel26);
        jPanel26.setLayout(jPanel26Layout);
        jPanel26Layout.setHorizontalGroup(
            jPanel26Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 163, Short.MAX_VALUE)
            .addGroup(jPanel26Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel26Layout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(jPanel26Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(btnPGetSDIn, javax.swing.GroupLayout.DEFAULT_SIZE, 143, Short.MAX_VALUE)
                        .addComponent(btnPGetRxSubMap, javax.swing.GroupLayout.DEFAULT_SIZE, 143, Short.MAX_VALUE)
                        .addComponent(btnPGetModExpansionIn, javax.swing.GroupLayout.DEFAULT_SIZE, 143, Short.MAX_VALUE))
                    .addContainerGap()))
        );
        jPanel26Layout.setVerticalGroup(
            jPanel26Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 104, Short.MAX_VALUE)
            .addGroup(jPanel26Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel26Layout.createSequentialGroup()
                    .addGap(9, 9, 9)
                    .addComponent(btnPGetModExpansionIn)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(btnPGetRxSubMap)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(btnPGetSDIn)
                    .addContainerGap(14, Short.MAX_VALUE)))
        );

        jPanel27.setName("jPanel27"); // NOI18N

        btnPGetMP3.setAction(actionMap.get("PGetMP3")); // NOI18N
        btnPGetMP3.setText(resourceMap.getString("btnPGetMP3.text")); // NOI18N
        btnPGetMP3.setName("btnPGetMP3"); // NOI18N

        btnPGetLimitadorThreshold.setAction(actionMap.get("PGetLimitadorThreshold")); // NOI18N
        btnPGetLimitadorThreshold.setText(resourceMap.getString("btnPGetLimitadorThreshold.text")); // NOI18N
        btnPGetLimitadorThreshold.setName("btnPGetLimitadorThreshold"); // NOI18N

        btnPGetLimitadorSoftknee.setAction(actionMap.get("PGetLimitadorSoftknee")); // NOI18N
        btnPGetLimitadorSoftknee.setText(resourceMap.getString("btnPGetLimitadorSoftknee.text")); // NOI18N
        btnPGetLimitadorSoftknee.setName("btnPGetLimitadorSoftknee"); // NOI18N

        javax.swing.GroupLayout jPanel27Layout = new javax.swing.GroupLayout(jPanel27);
        jPanel27.setLayout(jPanel27Layout);
        jPanel27Layout.setHorizontalGroup(
            jPanel27Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 163, Short.MAX_VALUE)
            .addGroup(jPanel27Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel27Layout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(jPanel27Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(btnPGetMP3, javax.swing.GroupLayout.DEFAULT_SIZE, 143, Short.MAX_VALUE)
                        .addComponent(btnPGetLimitadorThreshold, javax.swing.GroupLayout.DEFAULT_SIZE, 143, Short.MAX_VALUE)
                        .addComponent(btnPGetLimitadorSoftknee, javax.swing.GroupLayout.DEFAULT_SIZE, 143, Short.MAX_VALUE))
                    .addContainerGap()))
        );
        jPanel27Layout.setVerticalGroup(
            jPanel27Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 104, Short.MAX_VALUE)
            .addGroup(jPanel27Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel27Layout.createSequentialGroup()
                    .addGap(9, 9, 9)
                    .addComponent(btnPGetLimitadorSoftknee)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(btnPGetLimitadorThreshold)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(btnPGetMP3)
                    .addContainerGap(14, Short.MAX_VALUE)))
        );

        jPanel21.setName("jPanel21"); // NOI18N

        btnMP3In.setAction(actionMap.get("PGetMP3In")); // NOI18N
        btnMP3In.setText(resourceMap.getString("btnMP3In.text")); // NOI18N
        btnMP3In.setName("btnMP3In"); // NOI18N

        javax.swing.GroupLayout jPanel21Layout = new javax.swing.GroupLayout(jPanel21);
        jPanel21.setLayout(jPanel21Layout);
        jPanel21Layout.setHorizontalGroup(
            jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 163, Short.MAX_VALUE)
            .addGroup(jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel21Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(btnMP3In, javax.swing.GroupLayout.DEFAULT_SIZE, 143, Short.MAX_VALUE)
                    .addContainerGap()))
        );
        jPanel21Layout.setVerticalGroup(
            jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 111, Short.MAX_VALUE)
            .addGroup(jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel21Layout.createSequentialGroup()
                    .addGap(9, 9, 9)
                    .addComponent(btnMP3In)
                    .addContainerGap(79, Short.MAX_VALUE)))
        );

        javax.swing.GroupLayout jPanel19Layout = new javax.swing.GroupLayout(jPanel19);
        jPanel19.setLayout(jPanel19Layout);
        jPanel19Layout.setHorizontalGroup(
            jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel19Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel27, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel20, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel21, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel26, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel25, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel23, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25))
        );
        jPanel19Layout.setVerticalGroup(
            jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel19Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel23, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel19Layout.createSequentialGroup()
                        .addGroup(jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jPanel25, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel26, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel21, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel19Layout.createSequentialGroup()
                        .addComponent(jPanel27, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel20, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );

        jTabbedPane1.addTab(resourceMap.getString("jPanel19.TabConstraints.tabTitle"), jPanel19); // NOI18N

        jPanel28.setName("jPanel28"); // NOI18N

        jPanel29.setName("jPanel29"); // NOI18N

        PSetReset.setAction(actionMap.get("PSetReset")); // NOI18N
        PSetReset.setText(resourceMap.getString("PSetReset.text")); // NOI18N
        PSetReset.setName("PSetReset"); // NOI18N

        btnPSetPreset.setAction(actionMap.get("PSetPreset")); // NOI18N
        btnPSetPreset.setText(resourceMap.getString("btnPSetPreset.text")); // NOI18N
        btnPSetPreset.setName("btnPSetPreset"); // NOI18N

        btnPSetMP3.setAction(actionMap.get("PSetMP3")); // NOI18N
        btnPSetMP3.setText(resourceMap.getString("btnPSetMP3.text")); // NOI18N
        btnPSetMP3.setName("btnPSetMP3"); // NOI18N

        javax.swing.GroupLayout jPanel29Layout = new javax.swing.GroupLayout(jPanel29);
        jPanel29.setLayout(jPanel29Layout);
        jPanel29Layout.setHorizontalGroup(
            jPanel29Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 163, Short.MAX_VALUE)
            .addGroup(jPanel29Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel29Layout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(jPanel29Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(btnPSetPreset, javax.swing.GroupLayout.DEFAULT_SIZE, 143, Short.MAX_VALUE)
                        .addComponent(btnPSetMP3, javax.swing.GroupLayout.DEFAULT_SIZE, 143, Short.MAX_VALUE)
                        .addComponent(PSetReset, javax.swing.GroupLayout.DEFAULT_SIZE, 143, Short.MAX_VALUE))
                    .addContainerGap()))
        );
        jPanel29Layout.setVerticalGroup(
            jPanel29Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 112, Short.MAX_VALUE)
            .addGroup(jPanel29Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel29Layout.createSequentialGroup()
                    .addGap(9, 9, 9)
                    .addComponent(btnPSetMP3)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(btnPSetPreset)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(PSetReset)
                    .addContainerGap(22, Short.MAX_VALUE)))
        );

        jPanel31.setName("jPanel31"); // NOI18N

        btnPSetTxSubMap.setAction(actionMap.get("PSetTxSubMap")); // NOI18N
        btnPSetTxSubMap.setText(resourceMap.getString("btnPSetTxSubMap.text")); // NOI18N
        btnPSetTxSubMap.setName("btnPSetTxSubMap"); // NOI18N

        btnPSetSalida.setAction(actionMap.get("PSetSalida")); // NOI18N
        btnPSetSalida.setText(resourceMap.getString("btnPSetSalida.text")); // NOI18N
        btnPSetSalida.setName("btnPSetSalida"); // NOI18N

        btnPSetRxSubMap.setAction(actionMap.get("PSetRxSubMap")); // NOI18N
        btnPSetRxSubMap.setText(resourceMap.getString("btnPSetRxSubMap.text")); // NOI18N
        btnPSetRxSubMap.setName("btnPSetRxSubMap"); // NOI18N

        javax.swing.GroupLayout jPanel31Layout = new javax.swing.GroupLayout(jPanel31);
        jPanel31.setLayout(jPanel31Layout);
        jPanel31Layout.setHorizontalGroup(
            jPanel31Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 163, Short.MAX_VALUE)
            .addGroup(jPanel31Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel31Layout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(jPanel31Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(btnPSetTxSubMap, javax.swing.GroupLayout.DEFAULT_SIZE, 143, Short.MAX_VALUE)
                        .addComponent(btnPSetSalida, javax.swing.GroupLayout.DEFAULT_SIZE, 143, Short.MAX_VALUE)
                        .addComponent(btnPSetRxSubMap, javax.swing.GroupLayout.DEFAULT_SIZE, 143, Short.MAX_VALUE))
                    .addContainerGap()))
        );
        jPanel31Layout.setVerticalGroup(
            jPanel31Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 112, Short.MAX_VALUE)
            .addGroup(jPanel31Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel31Layout.createSequentialGroup()
                    .addGap(9, 9, 9)
                    .addComponent(btnPSetRxSubMap)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(btnPSetSalida)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(btnPSetTxSubMap)
                    .addContainerGap(22, Short.MAX_VALUE)))
        );

        jPanel32.setName("jPanel32"); // NOI18N

        btnPSetGananciaCFS.setAction(actionMap.get("PSetGananciaCFS")); // NOI18N
        btnPSetGananciaCFS.setText(resourceMap.getString("btnPSetGananciaCFS.text")); // NOI18N
        btnPSetGananciaCFS.setName("btnPSetGananciaCFS"); // NOI18N

        btnPSetGananciaCFE.setAction(actionMap.get("PSetGananciaCFE")); // NOI18N
        btnPSetGananciaCFE.setText(resourceMap.getString("btnPSetGananciaCFE.text")); // NOI18N
        btnPSetGananciaCFE.setName("btnPSetGananciaCFE"); // NOI18N

        btnPSetDatoDSP.setAction(actionMap.get("PSetDatoDSP")); // NOI18N
        btnPSetDatoDSP.setText(resourceMap.getString("btnPSetDatoDSP.text")); // NOI18N
        btnPSetDatoDSP.setName("btnPSetDatoDSP"); // NOI18N

        javax.swing.GroupLayout jPanel32Layout = new javax.swing.GroupLayout(jPanel32);
        jPanel32.setLayout(jPanel32Layout);
        jPanel32Layout.setHorizontalGroup(
            jPanel32Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 171, Short.MAX_VALUE)
            .addGroup(jPanel32Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel32Layout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(jPanel32Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(btnPSetGananciaCFS, javax.swing.GroupLayout.DEFAULT_SIZE, 151, Short.MAX_VALUE)
                        .addComponent(btnPSetGananciaCFE, javax.swing.GroupLayout.DEFAULT_SIZE, 151, Short.MAX_VALUE)
                        .addComponent(btnPSetDatoDSP, javax.swing.GroupLayout.DEFAULT_SIZE, 151, Short.MAX_VALUE))
                    .addContainerGap()))
        );
        jPanel32Layout.setVerticalGroup(
            jPanel32Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 101, Short.MAX_VALUE)
            .addGroup(jPanel32Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel32Layout.createSequentialGroup()
                    .addGap(9, 9, 9)
                    .addComponent(btnPSetDatoDSP)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(btnPSetGananciaCFE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(btnPSetGananciaCFS)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        jPanel33.setName("jPanel33"); // NOI18N

        btnPSetTonoMaster.setAction(actionMap.get("PSetTonoMaster")); // NOI18N
        btnPSetTonoMaster.setText(resourceMap.getString("btnPSetTonoMaster.text")); // NOI18N
        btnPSetTonoMaster.setName("btnPSetTonoMaster"); // NOI18N

        btnPSetTonoFrec.setAction(actionMap.get("PSetTonoFrec")); // NOI18N
        btnPSetTonoFrec.setText(resourceMap.getString("btnPSetTonoFrec.text")); // NOI18N
        btnPSetTonoFrec.setName("btnPSetTonoFrec"); // NOI18N

        btnPSetTono.setAction(actionMap.get("PSetTono")); // NOI18N
        btnPSetTono.setText(resourceMap.getString("btnPSetTono.text")); // NOI18N
        btnPSetTono.setName("btnPSetTono"); // NOI18N

        javax.swing.GroupLayout jPanel33Layout = new javax.swing.GroupLayout(jPanel33);
        jPanel33.setLayout(jPanel33Layout);
        jPanel33Layout.setHorizontalGroup(
            jPanel33Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 163, Short.MAX_VALUE)
            .addGroup(jPanel33Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel33Layout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(jPanel33Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(btnPSetTonoMaster, javax.swing.GroupLayout.DEFAULT_SIZE, 143, Short.MAX_VALUE)
                        .addComponent(btnPSetTonoFrec, javax.swing.GroupLayout.DEFAULT_SIZE, 143, Short.MAX_VALUE)
                        .addComponent(btnPSetTono, javax.swing.GroupLayout.DEFAULT_SIZE, 143, Short.MAX_VALUE))
                    .addContainerGap()))
        );
        jPanel33Layout.setVerticalGroup(
            jPanel33Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 111, Short.MAX_VALUE)
            .addGroup(jPanel33Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel33Layout.createSequentialGroup()
                    .addGap(9, 9, 9)
                    .addComponent(btnPSetTono)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(btnPSetTonoFrec)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(btnPSetTonoMaster)
                    .addContainerGap(21, Short.MAX_VALUE)))
        );

        jPanel34.setName("jPanel34"); // NOI18N

        btnPSetConfigGestionAutomaticaMicrofonos.setAction(actionMap.get("PSetConfigGestionAutomaticaMicrofonos")); // NOI18N
        btnPSetConfigGestionAutomaticaMicrofonos.setText(resourceMap.getString("btnPSetConfigGestionAutomaticaMicrofonos.text")); // NOI18N
        btnPSetConfigGestionAutomaticaMicrofonos.setName("btnPSetConfigGestionAutomaticaMicrofonos"); // NOI18N

        btnPSetConfigCierres.setAction(actionMap.get("PSetConfigCierres")); // NOI18N
        btnPSetConfigCierres.setText(resourceMap.getString("btnPSetConfigCierres.text")); // NOI18N
        btnPSetConfigCierres.setName("btnPSetConfigCierres"); // NOI18N

        btnPSetConfigAtenuadores.setAction(actionMap.get("PSetConfigAtenuadores")); // NOI18N
        btnPSetConfigAtenuadores.setText(resourceMap.getString("btnPSetConfigAtenuadores.text")); // NOI18N
        btnPSetConfigAtenuadores.setName("btnPSetConfigAtenuadores"); // NOI18N

        javax.swing.GroupLayout jPanel34Layout = new javax.swing.GroupLayout(jPanel34);
        jPanel34.setLayout(jPanel34Layout);
        jPanel34Layout.setHorizontalGroup(
            jPanel34Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 161, Short.MAX_VALUE)
            .addGroup(jPanel34Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel34Layout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(jPanel34Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(btnPSetConfigGestionAutomaticaMicrofonos, javax.swing.GroupLayout.DEFAULT_SIZE, 141, Short.MAX_VALUE)
                        .addComponent(btnPSetConfigCierres, javax.swing.GroupLayout.DEFAULT_SIZE, 141, Short.MAX_VALUE)
                        .addComponent(btnPSetConfigAtenuadores, javax.swing.GroupLayout.DEFAULT_SIZE, 141, Short.MAX_VALUE))
                    .addContainerGap()))
        );
        jPanel34Layout.setVerticalGroup(
            jPanel34Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 101, Short.MAX_VALUE)
            .addGroup(jPanel34Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel34Layout.createSequentialGroup()
                    .addGap(9, 9, 9)
                    .addComponent(btnPSetConfigAtenuadores)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(btnPSetConfigCierres)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(btnPSetConfigGestionAutomaticaMicrofonos)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        jPanel35.setName("jPanel35"); // NOI18N

        btnPGetBundleSalida3.setAction(actionMap.get("PSetComunicaciones485")); // NOI18N
        btnPGetBundleSalida3.setText(resourceMap.getString("btnPGetBundleSalida3.text")); // NOI18N
        btnPGetBundleSalida3.setName("btnPGetBundleSalida3"); // NOI18N

        btnPGetBundleEntrada3.setAction(actionMap.get("PSetCierre")); // NOI18N
        btnPGetBundleEntrada3.setText(resourceMap.getString("btnPGetBundleEntrada3.text")); // NOI18N
        btnPGetBundleEntrada3.setName("btnPGetBundleEntrada3"); // NOI18N

        btnPSetBundleSalida.setAction(actionMap.get("PSetBundleSalida")); // NOI18N
        btnPSetBundleSalida.setText(resourceMap.getString("btnPSetBundleSalida.text")); // NOI18N
        btnPSetBundleSalida.setName("btnPSetBundleSalida"); // NOI18N

        javax.swing.GroupLayout jPanel35Layout = new javax.swing.GroupLayout(jPanel35);
        jPanel35.setLayout(jPanel35Layout);
        jPanel35Layout.setHorizontalGroup(
            jPanel35Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 163, Short.MAX_VALUE)
            .addGroup(jPanel35Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel35Layout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(jPanel35Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(btnPGetBundleSalida3, javax.swing.GroupLayout.DEFAULT_SIZE, 143, Short.MAX_VALUE)
                        .addComponent(btnPGetBundleEntrada3, javax.swing.GroupLayout.DEFAULT_SIZE, 143, Short.MAX_VALUE)
                        .addComponent(btnPSetBundleSalida, javax.swing.GroupLayout.DEFAULT_SIZE, 143, Short.MAX_VALUE))
                    .addContainerGap()))
        );
        jPanel35Layout.setVerticalGroup(
            jPanel35Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 103, Short.MAX_VALUE)
            .addGroup(jPanel35Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel35Layout.createSequentialGroup()
                    .addGap(9, 9, 9)
                    .addComponent(btnPSetBundleSalida)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(btnPGetBundleEntrada3)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(btnPGetBundleSalida3)
                    .addContainerGap(13, Short.MAX_VALUE)))
        );

        jPanel36.setName("jPanel36"); // NOI18N

        btnPSetBundleEntrada.setAction(actionMap.get("PSetBundleEntrada")); // NOI18N
        btnPSetBundleEntrada.setText(resourceMap.getString("btnPSetBundleEntrada.text")); // NOI18N
        btnPSetBundleEntrada.setName("btnPSetBundleEntrada"); // NOI18N

        btnPSetAtenuador24V.setAction(actionMap.get("PSetAtenuador24V")); // NOI18N
        btnPSetAtenuador24V.setText(resourceMap.getString("btnPSetAtenuador24V.text")); // NOI18N
        btnPSetAtenuador24V.setName("btnPSetAtenuador24V"); // NOI18N

        btnPSetAmplificador.setAction(actionMap.get("PSetAmplificador")); // NOI18N
        btnPSetAmplificador.setText(resourceMap.getString("btnPSetAmplificador.text")); // NOI18N
        btnPSetAmplificador.setName("btnPSetAmplificador"); // NOI18N

        javax.swing.GroupLayout jPanel36Layout = new javax.swing.GroupLayout(jPanel36);
        jPanel36.setLayout(jPanel36Layout);
        jPanel36Layout.setHorizontalGroup(
            jPanel36Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 163, Short.MAX_VALUE)
            .addGroup(jPanel36Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel36Layout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(jPanel36Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(btnPSetBundleEntrada, javax.swing.GroupLayout.DEFAULT_SIZE, 143, Short.MAX_VALUE)
                        .addComponent(btnPSetAtenuador24V, javax.swing.GroupLayout.DEFAULT_SIZE, 143, Short.MAX_VALUE)
                        .addComponent(btnPSetAmplificador, javax.swing.GroupLayout.DEFAULT_SIZE, 143, Short.MAX_VALUE))
                    .addContainerGap()))
        );
        jPanel36Layout.setVerticalGroup(
            jPanel36Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 101, Short.MAX_VALUE)
            .addGroup(jPanel36Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel36Layout.createSequentialGroup()
                    .addGap(9, 9, 9)
                    .addComponent(btnPSetAmplificador)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(btnPSetAtenuador24V)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(btnPSetBundleEntrada)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        jPanel10.setName("jPanel10"); // NOI18N

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        jTextArea1.setBackground(resourceMap.getColor("jTextArea1.background")); // NOI18N
        jTextArea1.setColumns(20);
        jTextArea1.setEditable(false);
        jTextArea1.setRows(5);
        jTextArea1.setText(resourceMap.getString("jTextArea1.text")); // NOI18N
        jTextArea1.setName("jTextArea1"); // NOI18N
        jScrollPane1.setViewportView(jTextArea1);

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(13, Short.MAX_VALUE))
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(14, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel28Layout = new javax.swing.GroupLayout(jPanel28);
        jPanel28.setLayout(jPanel28Layout);
        jPanel28Layout.setHorizontalGroup(
            jPanel28Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel28Layout.createSequentialGroup()
                .addGap(350, 350, 350)
                .addGroup(jPanel28Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel28Layout.createSequentialGroup()
                        .addComponent(jPanel33, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel28Layout.createSequentialGroup()
                        .addComponent(jPanel34, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel32, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(29, Short.MAX_VALUE))
            .addGroup(jPanel28Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel28Layout.createSequentialGroup()
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel28Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jPanel29, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel36, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(jPanel28Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jPanel35, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel31, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGap(785, 785, 785)))
        );
        jPanel28Layout.setVerticalGroup(
            jPanel28Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel28Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel28Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jPanel34, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel32, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel28Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel33, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(14, 14, 14))
            .addGroup(jPanel28Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel28Layout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(jPanel28Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jPanel35, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel36, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(jPanel28Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jPanel29, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel31, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addContainerGap()))
        );

        jTabbedPane1.addTab(resourceMap.getString("jPanel28.TabConstraints.tabTitle"), jPanel28); // NOI18N

        jTConsole.setFont(resourceMap.getFont("jTInput.font")); // NOI18N
        jTConsole.setForeground(resourceMap.getColor("jTInput.foreground")); // NOI18N
        jTConsole.setText(resourceMap.getString("jTInput.text")); // NOI18N
        jTConsole.setName("jTInput"); // NOI18N

        javax.swing.GroupLayout mainPanelLayout = new javax.swing.GroupLayout(mainPanel);
        mainPanel.setLayout(mainPanelLayout);
        mainPanelLayout.setHorizontalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(mainPanelLayout.createSequentialGroup()
                        .addComponent(btnConnect, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTfIP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnDisconnect, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnDispose, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnClose, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(434, 434, 434))
                    .addGroup(mainPanelLayout.createSequentialGroup()
                        .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, mainPanelLayout.createSequentialGroup()
                                .addComponent(estado, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTConsole))
                            .addComponent(jTabbedPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 726, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(5, 5, 5))
        );
        mainPanelLayout.setVerticalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, mainPanelLayout.createSequentialGroup()
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnConnect, javax.swing.GroupLayout.PREFERRED_SIZE, 42, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, mainPanelLayout.createSequentialGroup()
                        .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTfIP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addGap(6, 6, 6))
                    .addComponent(btnDisconnect, javax.swing.GroupLayout.PREFERRED_SIZE, 42, Short.MAX_VALUE)
                    .addComponent(btnDispose, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnClose, 0, 42, Short.MAX_VALUE))
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(mainPanelLayout.createSequentialGroup()
                        .addGap(266, 266, 266)
                        .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(mainPanelLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTConsole)
                    .addComponent(estado, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(67, 67, 67))
        );

        jTabbedPane1.getAccessibleContext().setAccessibleName(resourceMap.getString("jTabbedPane1.AccessibleContext.accessibleName")); // NOI18N

        menuBar.setName("menuBar"); // NOI18N

        fileMenu.setLabel(resourceMap.getString("fileMenu.label")); // NOI18N
        fileMenu.setName("fileMenu"); // NOI18N

        jMenuItem1.setAction(actionMap.get("connectAction")); // NOI18N
        jMenuItem1.setText(resourceMap.getString("jMenuItem1.text")); // NOI18N
        jMenuItem1.setName("jMenuItem1"); // NOI18N
        fileMenu.add(jMenuItem1);

        jMenuItem2.setAction(actionMap.get("disconnectAction")); // NOI18N
        jMenuItem2.setText(resourceMap.getString("jMenuItem2.text")); // NOI18N
        jMenuItem2.setName("jMenuItem2"); // NOI18N
        fileMenu.add(jMenuItem2);

        exitMenuItem.setAction(actionMap.get("quit")); // NOI18N
        exitMenuItem.setName("exitMenuItem"); // NOI18N
        fileMenu.add(exitMenuItem);

        menuBar.add(fileMenu);

        helpMenu.setText(resourceMap.getString("helpMenu.text")); // NOI18N
        helpMenu.setName("helpMenu"); // NOI18N

        aboutMenuItem.setAction(actionMap.get("showAboutBox")); // NOI18N
        aboutMenuItem.setName("aboutMenuItem"); // NOI18N
        helpMenu.add(aboutMenuItem);

        menuBar.add(helpMenu);

        statusPanel.setName("statusPanel"); // NOI18N

        statusPanelSeparator.setName("statusPanelSeparator"); // NOI18N

        statusMessageLabel.setName("statusMessageLabel"); // NOI18N

        statusAnimationLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        statusAnimationLabel.setName("statusAnimationLabel"); // NOI18N

        jButton1.setAction(actionMap.get("limpiaJLConsole")); // NOI18N
        jButton1.setName("jButton1"); // NOI18N

        jButton2.setAction(actionMap.get("quit")); // NOI18N
        jButton2.setText(resourceMap.getString("jButton2.text")); // NOI18N
        jButton2.setName("jButton2"); // NOI18N

        jLConsole.setBackground(resourceMap.getColor("jLConsole.background")); // NOI18N
        jLConsole.setForeground(resourceMap.getColor("jLConsole.foreground")); // NOI18N
        jLConsole.setText(resourceMap.getString("jLConsole.text")); // NOI18N
        jLConsole.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jLConsole.setName("jLConsole"); // NOI18N

        javax.swing.GroupLayout statusPanelLayout = new javax.swing.GroupLayout(statusPanel);
        statusPanel.setLayout(statusPanelLayout);
        statusPanelLayout.setHorizontalGroup(
            statusPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(statusPanelSeparator, javax.swing.GroupLayout.DEFAULT_SIZE, 747, Short.MAX_VALUE)
            .addGroup(statusPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(statusPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(statusMessageLabel)
                    .addGroup(statusPanelLayout.createSequentialGroup()
                        .addComponent(jButton2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLConsole, javax.swing.GroupLayout.DEFAULT_SIZE, 589, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(statusPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(statusAnimationLabel, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jButton1, javax.swing.GroupLayout.Alignment.TRAILING))))
                .addContainerGap())
        );
        statusPanelLayout.setVerticalGroup(
            statusPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(statusPanelLayout.createSequentialGroup()
                .addComponent(statusPanelSeparator, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(statusPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLConsole, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(statusPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(statusPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(statusMessageLabel)
                            .addComponent(statusAnimationLabel))
                        .addComponent(jButton1)
                        .addComponent(jButton2)))
                .addContainerGap())
        );

        setComponent(mainPanel);
        setMenuBar(menuBar);
        setStatusBar(statusPanel);
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    javax.swing.JButton PSetReset;
    javax.swing.JButton btnClose;
    javax.swing.JButton btnConnect;
    javax.swing.JButton btnDisconnect;
    javax.swing.JButton btnDispose;
    javax.swing.JButton btnEstadoConexionEquipo;
    javax.swing.JButton btnFbDSPActivo;
    javax.swing.JButton btnMP3In;
    javax.swing.JButton btnPGetAmplificador;
    javax.swing.JButton btnPGetAtenuador24V;
    javax.swing.JButton btnPGetBundleEntrada;
    javax.swing.JButton btnPGetBundleEntrada3;
    javax.swing.JButton btnPGetBundleSalida;
    javax.swing.JButton btnPGetBundleSalida3;
    javax.swing.JButton btnPGetCierre;
    javax.swing.JButton btnPGetCompresorAttack;
    javax.swing.JButton btnPGetCompresorBypass;
    javax.swing.JButton btnPGetCompresorRatio;
    javax.swing.JButton btnPGetCompresorRelease;
    javax.swing.JButton btnPGetCompresorSoftknee;
    javax.swing.JButton btnPGetCompresorThreshold;
    javax.swing.JButton btnPGetComunicaciones485;
    javax.swing.JButton btnPGetConfigAtenuadores;
    javax.swing.JButton btnPGetConfigCierres;
    javax.swing.JButton btnPGetConfigGestionAutomaticaMicrofonos;
    javax.swing.JButton btnPGetDatoDSP;
    javax.swing.JButton btnPGetGananciaCFE;
    javax.swing.JButton btnPGetGananciaCFS;
    javax.swing.JButton btnPGetLimitadorAttack;
    javax.swing.JButton btnPGetLimitadorBypass;
    javax.swing.JButton btnPGetLimitadorRatio;
    javax.swing.JButton btnPGetLimitadorRelease;
    javax.swing.JButton btnPGetLimitadorSoftknee;
    javax.swing.JButton btnPGetLimitadorThreshold;
    javax.swing.JButton btnPGetMP3;
    javax.swing.JButton btnPGetModExpansionIn;
    javax.swing.JButton btnPGetRxSubMap;
    javax.swing.JButton btnPGetSDIn;
    javax.swing.JButton btnPGetSDProtect;
    javax.swing.JButton btnPGetSalida;
    javax.swing.JButton btnPGetTemperatura;
    javax.swing.JButton btnPGetTono;
    javax.swing.JButton btnPGetTonoFrec;
    javax.swing.JButton btnPGetTonoMaster;
    javax.swing.JButton btnPGetTxSubMap;
    javax.swing.JButton btnPGetVumetroCE;
    javax.swing.JButton btnPGetVumetroCS;
    javax.swing.JButton btnPSetAmplificador;
    javax.swing.JButton btnPSetAtenuador24V;
    javax.swing.JButton btnPSetBundleEntrada;
    javax.swing.JButton btnPSetBundleSalida;
    javax.swing.JButton btnPSetConfigAtenuadores;
    javax.swing.JButton btnPSetConfigCierres;
    javax.swing.JButton btnPSetConfigGestionAutomaticaMicrofonos;
    javax.swing.JButton btnPSetDatoDSP;
    javax.swing.JButton btnPSetGananciaCFE;
    javax.swing.JButton btnPSetGananciaCFS;
    javax.swing.JButton btnPSetMP3;
    javax.swing.JButton btnPSetPreset;
    javax.swing.JButton btnPSetRxSubMap;
    javax.swing.JButton btnPSetSalida;
    javax.swing.JButton btnPSetTono;
    javax.swing.JButton btnPSetTonoFrec;
    javax.swing.JButton btnPSetTonoMaster;
    javax.swing.JButton btnPSetTxSubMap;
    public static javax.swing.JLabel estado;
    javax.swing.JButton jButton1;
    javax.swing.JButton jButton2;
    javax.swing.JLabel jLConsole;
    javax.swing.JLabel jLabel1;
    javax.swing.JMenuItem jMenuItem1;
    javax.swing.JMenuItem jMenuItem2;
    javax.swing.JPanel jPanel1;
    javax.swing.JPanel jPanel10;
    javax.swing.JPanel jPanel19;
    javax.swing.JPanel jPanel2;
    javax.swing.JPanel jPanel20;
    javax.swing.JPanel jPanel21;
    javax.swing.JPanel jPanel23;
    javax.swing.JPanel jPanel25;
    javax.swing.JPanel jPanel26;
    javax.swing.JPanel jPanel27;
    javax.swing.JPanel jPanel28;
    javax.swing.JPanel jPanel29;
    javax.swing.JPanel jPanel3;
    javax.swing.JPanel jPanel31;
    javax.swing.JPanel jPanel32;
    javax.swing.JPanel jPanel33;
    javax.swing.JPanel jPanel34;
    javax.swing.JPanel jPanel35;
    javax.swing.JPanel jPanel36;
    javax.swing.JPanel jPanel4;
    javax.swing.JPanel jPanel5;
    javax.swing.JPanel jPanel6;
    javax.swing.JPanel jPanel7;
    javax.swing.JPanel jPanel8;
    javax.swing.JPanel jPanel9;
    javax.swing.JScrollPane jScrollPane1;
    javax.swing.JSeparator jSeparator2;
    javax.swing.JTextField jTConsole;
    javax.swing.JTabbedPane jTabbedPane1;
    javax.swing.JTextArea jTextArea1;
    javax.swing.JTextField jTfIP;
    javax.swing.JPanel mainPanel;
    javax.swing.JMenuBar menuBar;
    private javax.swing.JLabel statusAnimationLabel;
    private javax.swing.JLabel statusMessageLabel;
    javax.swing.JPanel statusPanel;
    // End of variables declaration//GEN-END:variables
    private final Timer messageTimer;
    private final Timer busyIconTimer;
    private final Icon idleIcon;
    private final Icon[] busyIcons = new Icon[15];
    private int busyIconIndex = 0;
    private JDialog aboutBox;
    private IDriver a = new ZESImpl();

    @Action
    public Task connectAction() {
        return new ConnectActionTask(getApplication(), this.jTfIP.getText());
    }

    @Action
    public Task disconnectAction() {
        return new DisconnectActionTask(getApplication());
    }

    private void deshabilitarBotones() {
        this.jTabbedPane1.setEnabled(false);
        PSetReset.setEnabled(false);
        btnClose.setEnabled(false);
        btnDispose.setEnabled(false);
        btnEstadoConexionEquipo.setEnabled(false);
        btnFbDSPActivo.setEnabled(false);
        btnPGetAmplificador.setEnabled(false);
        btnPGetAtenuador24V.setEnabled(false);
        btnPGetBundleEntrada.setEnabled(false);
        btnPGetBundleEntrada3.setEnabled(false);
        btnPGetBundleSalida.setEnabled(false);
        btnPGetBundleSalida3.setEnabled(false);
        btnPGetCierre.setEnabled(false);
        btnPGetCompresorAttack.setEnabled(false);
        btnPGetCompresorBypass.setEnabled(false);
        btnPGetCompresorRatio.setEnabled(false);
        btnPGetCompresorRelease.setEnabled(false);
        btnPGetCompresorSoftknee.setEnabled(false);
        btnPGetCompresorThreshold.setEnabled(false);
        btnPGetComunicaciones485.setEnabled(false);
        btnPGetConfigAtenuadores.setEnabled(false);
        btnPGetConfigCierres.setEnabled(false);
        btnPGetConfigGestionAutomaticaMicrofonos.setEnabled(false);
        btnPGetDatoDSP.setEnabled(false);
        btnPGetGananciaCFE.setEnabled(false);
        btnPGetGananciaCFS.setEnabled(false);
        btnPGetLimitadorAttack.setEnabled(false);
        btnPGetLimitadorBypass.setEnabled(false);
        btnPGetLimitadorRatio.setEnabled(false);
        btnPGetLimitadorRelease.setEnabled(false);
        btnPGetLimitadorSoftknee.setEnabled(false);
        btnPGetLimitadorThreshold.setEnabled(false);
        btnPGetMP3.setEnabled(false);
        btnPGetModExpansionIn.setEnabled(false);
        btnPGetRxSubMap.setEnabled(false);
        btnPGetSDIn.setEnabled(false);
        btnPGetSDProtect.setEnabled(false);
        btnPGetSalida.setEnabled(false);
        btnPGetTemperatura.setEnabled(false);
        btnPGetTono.setEnabled(false);
        btnPGetTonoFrec.setEnabled(false);
        btnPGetTonoMaster.setEnabled(false);
        btnPGetTxSubMap.setEnabled(false);
        btnPGetVumetroCE.setEnabled(false);
        btnPGetVumetroCS.setEnabled(false);
        btnPSetAmplificador.setEnabled(false);
        btnPSetAtenuador24V.setEnabled(false);
        btnPSetBundleEntrada.setEnabled(false);
        btnPSetBundleSalida.setEnabled(false);
        btnPSetConfigAtenuadores.setEnabled(false);
        btnPSetConfigCierres.setEnabled(false);
        btnPSetConfigGestionAutomaticaMicrofonos.setEnabled(false);
        btnPSetDatoDSP.setEnabled(false);
        btnPSetGananciaCFE.setEnabled(false);
        btnPSetGananciaCFS.setEnabled(false);
        btnPSetMP3.setEnabled(false);
        btnPSetPreset.setEnabled(false);
        btnPSetRxSubMap.setEnabled(false);
        btnPSetSalida.setEnabled(false);
        btnPSetTono.setEnabled(false);
        btnPSetTonoFrec.setEnabled(false);
        btnPSetTonoMaster.setEnabled(false);
        btnPSetTxSubMap.setEnabled(false);
        btnMP3In.setEnabled(false);
    }

    private void habilitarBotones() {
        this.jTabbedPane1.setEnabled(true);
        PSetReset.setEnabled(true);
        btnClose.setEnabled(true);
        btnDispose.setEnabled(true);
        btnEstadoConexionEquipo.setEnabled(true);
        btnFbDSPActivo.setEnabled(true);
        btnPGetAmplificador.setEnabled(true);
        btnPGetAtenuador24V.setEnabled(true);
        btnPGetBundleEntrada.setEnabled(true);
        btnPGetBundleEntrada3.setEnabled(true);
        btnPGetBundleSalida.setEnabled(true);
        btnPGetBundleSalida3.setEnabled(true);
        btnPGetCierre.setEnabled(true);
        btnPGetCompresorAttack.setEnabled(true);
        btnPGetCompresorBypass.setEnabled(true);
        btnPGetCompresorRatio.setEnabled(true);
        btnPGetCompresorRelease.setEnabled(true);
        btnPGetCompresorSoftknee.setEnabled(true);
        btnPGetCompresorThreshold.setEnabled(true);
        btnPGetComunicaciones485.setEnabled(true);
        btnPGetConfigAtenuadores.setEnabled(true);
        btnPGetConfigCierres.setEnabled(true);
        btnPGetConfigGestionAutomaticaMicrofonos.setEnabled(true);
        btnPGetDatoDSP.setEnabled(true);
        btnPGetGananciaCFE.setEnabled(true);
        btnPGetGananciaCFS.setEnabled(true);
        btnPGetLimitadorAttack.setEnabled(true);
        btnPGetLimitadorBypass.setEnabled(true);
        btnPGetLimitadorRatio.setEnabled(true);
        btnPGetLimitadorRelease.setEnabled(true);
        btnPGetLimitadorSoftknee.setEnabled(true);
        btnPGetLimitadorThreshold.setEnabled(true);
        btnPGetMP3.setEnabled(true);
        btnPGetModExpansionIn.setEnabled(true);
        btnPGetRxSubMap.setEnabled(true);
        btnPGetSDIn.setEnabled(true);
        btnPGetSDProtect.setEnabled(true);
        btnPGetSalida.setEnabled(true);
        btnPGetTemperatura.setEnabled(true);
        btnPGetTono.setEnabled(true);
        btnPGetTonoFrec.setEnabled(true);
        btnPGetTonoMaster.setEnabled(true);
        btnPGetTxSubMap.setEnabled(true);
        btnPGetVumetroCE.setEnabled(true);
        btnPGetVumetroCS.setEnabled(true);
        btnPSetAmplificador.setEnabled(true);
        btnPSetAtenuador24V.setEnabled(true);
        btnPSetBundleEntrada.setEnabled(true);
        btnPSetBundleSalida.setEnabled(true);
        btnPSetConfigAtenuadores.setEnabled(true);
        btnPSetConfigCierres.setEnabled(true);
        btnPSetConfigGestionAutomaticaMicrofonos.setEnabled(true);
        btnPSetDatoDSP.setEnabled(true);
        btnPSetGananciaCFE.setEnabled(true);
        btnPSetGananciaCFS.setEnabled(true);
        btnPSetMP3.setEnabled(true);
        btnPSetPreset.setEnabled(true);
        btnPSetRxSubMap.setEnabled(true);
        btnPSetSalida.setEnabled(true);
        btnPSetTono.setEnabled(true);
        btnPSetTonoFrec.setEnabled(true);
        btnPSetTonoMaster.setEnabled(true);
        btnPSetTxSubMap.setEnabled(true);
        btnMP3In.setEnabled(true);
    }

    private void ini() {
//        this.jPanel1.setVisible(true);
//        this.jPanel2.setVisible(true);
//        this.jPanel4.setVisible(true);
//        this.jPanel5.setVisible(true);
//        this.jPanel8.setVisible(true);
//        this.jPanel3.setVisible(true);
//        this.jPanel7.setVisible(true);
//        this.jPanel6.setVisible(true);
    }

    private class ConnectActionTask extends org.jdesktop.application.Task<Object, Void> {

        private ResourceMap resourceMap;

        ConnectActionTask(org.jdesktop.application.Application app, String ip) {
            // Runs on the EDT.  Copy GUI state that
            // doInBackground() depends on from parameters
            // to ConnectActionTask fields, here.
            super(app);
            try {
                String tiempo1 = TimeStamp.now();
                estado.setIcon(null);
                int intentos = 0;
                int intentosCont=0;
                boolean exit=false;
                String Ip = null;
                Ip = ip;
                a.exec("PFinish", null, null);
                String[] args = new String[2];
                args[0] = Ip;
                args[1] = "2000";
                a.exec("PStart", args, null);
                Object o = a.exec("EstadoConexionEquipo", null, null)[0];
//                while ((((Integer) o).intValue() != ZESStatus.OK) && !exit) {
//                    o = a.exec("EstadoConexionEquipo", null, null)[0];                    
//                    intentos++;                   
//                    if (intentos>5) {
//                        intentos=0;
//                        intentosCont++;
//                        a.exec("PStart", args, null);
//                        if (intentosCont>=5) {
//                            exit = true;
//                        }
//                    }
//                }
//                if (exit) {
//                    jLConsole.setText("ERROR DE CONEXIÓN.");
//                } else {
                    System.err.println(TimeStamp.now() + " " + (Integer) o);                
                    if (1 == ZESStatus.OK) {
                        estado.setIcon(new ImageIcon(getClass().getResource(java.util.ResourceBundle.getBundle("es/lda/cobi/zes/resources/DesktopApplication1View").getString("CONNECTED_STATUS"))));
                    } else {
                        estado.setIcon(new ImageIcon(getClass().getResource(java.util.ResourceBundle.getBundle("es/lda/cobi/zes/resources/DesktopApplication1View").getString("CANCEL"))));
                    }
                    String tiempo2 = TimeStamp.now();
                    habilitarBotones();
                    jLConsole.setText("");
                    jLConsole.setText(tiempo1 + " --- " + tiempo2);
//                }
            } catch (DriverException ex) {
                ex.printStackTrace();
            } catch (UnsupportedDriverOperation ex) {
                ex.printStackTrace();
            }
        }

        @Override
        protected Object doInBackground() {
            // Your Task's code here.  This method runs
            // on a background thread, so don't reference
            // the Swing GUI from here.
            return null;  // return your result
        }

        @Override
        protected void succeeded(Object result) {
            // Runs on the EDT.  Update the GUI based on
            // the result computed by doInBackground().
        }
    }

    private class DisconnectActionTask extends Task {

        DisconnectActionTask(org.jdesktop.application.Application app) {
            // Runs on the EDT.  Copy GUI state that
            // doInBackground() depends on from parameters
            // to ConnectActionTask fields, here.
            super(app);
            try {
                estado.setIcon(null);
                a.exec("PFinish", null, null);
                estado.setIcon(new ImageIcon(getClass().getResource(java.util.ResourceBundle.getBundle("es/lda/cobi/zes/resources/DesktopApplication1View").getString("CANCEL"))));
                estado.setIcon(null);
                jLConsole.setText("");
                deshabilitarBotones();
            } catch (DriverException ex) {
                ex.printStackTrace();
            } catch (UnsupportedDriverOperation ex) {
                ex.printStackTrace();
            }
        }

        @Override
        protected Object doInBackground() {
            // Your Task's code here.  This method runs
            // on a background thread, so don't reference
            // the Swing GUI from here.
            return null;  // return your result
        }

        @Override
        protected void succeeded(Object result) {
            // Runs on the EDT.  Update the GUI based on
            // the result computed by doInBackground().
        }
    }

    @Action
    public void FbDSPActivo() {
        try {
            Object o = a.exec("FbDSPActivo", null, null)[0];
            jLConsole.setText(ZESStatus.return2String((Integer) o).toString());
        } catch (DriverException ex) {
            ex.printStackTrace();
        } catch (UnsupportedDriverOperation ex) {
            ex.printStackTrace();
        }
    }

    @Action
    public void EstadoConexionEquipo() {
        try {
            Object o = a.exec("EstadoConexionEquipo", null, null)[0];
            Integer res = (Integer) o;
            jLConsole.setText(res + " - " + ZESStatus.status2String(res));
        } catch (DriverException ex) {
            ex.printStackTrace();
        } catch (UnsupportedDriverOperation ex) {
            ex.printStackTrace();
        }
    }

    @Action
    public void Dispose() {
        try {
            a.exec("Dispose", null, null);
        } catch (DriverException ex) {
            ex.printStackTrace();
        } catch (UnsupportedDriverOperation ex) {
            ex.printStackTrace();
        }
    }

    @Action
    public void Close() {
        try {
            a.exec("Close", null, null);
        } catch (DriverException ex) {
            ex.printStackTrace();
        } catch (UnsupportedDriverOperation ex) {
            ex.printStackTrace();
        }
    }

    @Action
    public void PGetAmplificador() {
        try {
            String[] args = new String[1];
            args[0] = "true";
            Object o = a.exec("PGetAmplificador", args, null)[0];
            jLConsole.setText(((Boolean) o).toString());
        } catch (DriverException ex) {
            ex.printStackTrace();
        } catch (UnsupportedDriverOperation ex) {
            ex.printStackTrace();
        }
    }

    @Action
    public void limpiaJLConsole() {
        jLConsole.setText("");
        jTConsole.setText("");
    }

    @Action
    public void PGetAtenuador24V() {
        try {
            String[] args = new String[1];
            args[0] = "true";
            Object o = a.exec("PGetAtenuador24V", args, null)[0];
            jLConsole.setText(ZESStatus.return2String((Integer) o).toString());
        } catch (DriverException ex) {
            ex.printStackTrace();
        } catch (UnsupportedDriverOperation ex) {
            ex.printStackTrace();
        }
    }

    @Action
    public void PGetBundleEntrada() {
        try {
            String[] args = new String[1];
            args[0] = "1";
            Object o = a.exec("PGetBundleEntrada", args, null)[0];
            jLConsole.setText(((Double) o).toString());
        } catch (DriverException ex) {
            ex.printStackTrace();
        } catch (UnsupportedDriverOperation ex) {
            ex.printStackTrace();
        }
    }

    @Action
    public void PGetBundleSalida() {
        try {
            String[] args = new String[1];
            args[0] = "1";
            Object o = a.exec("PGetBundleSalida", args, null)[0];
            jLConsole.setText(((Double) o).toString());
        } catch (DriverException ex) {
            ex.printStackTrace();
        } catch (UnsupportedDriverOperation ex) {
            ex.printStackTrace();
        }
    }

    @Action
    public void PGetCierre() {
        try {
            String[] args = new String[2];
            args[0] = "1";
            args[1] = "1";
            Object o = a.exec("PGetCierre", args, null)[0];
            jLConsole.setText(((Boolean) o).toString());
        } catch (DriverException ex) {
            ex.printStackTrace();
        } catch (UnsupportedDriverOperation ex) {
            ex.printStackTrace();
        }
    }

    @Action
    public void PGetCompresorAttack() {
        try {
            String[] args = new String[2];
            args[0] = "1";
            args[1] = "1";
            Object o = a.exec("PGetCompresorAttack", args, null)[0];
            jLConsole.setText(((Double) o).toString());
        } catch (DriverException ex) {
            ex.printStackTrace();
        } catch (UnsupportedDriverOperation ex) {
            ex.printStackTrace();
        }
    }

    @Action
    public void PGetCompresorBypass() {
        try {
            String[] args = new String[2];
            args[0] = "1";
            args[1] = "1";
            Object o = a.exec("PGetCompresorBypass", args, null)[0];
            jLConsole.setText(((Double) o).toString());
        } catch (DriverException ex) {
            ex.printStackTrace();
        } catch (UnsupportedDriverOperation ex) {
            ex.printStackTrace();
        }
    }

    @Action
    public void PGetCompresorRatio() {
        try {
            String[] args = new String[2];
            args[0] = "1";
            args[1] = "1";
            Object o = a.exec("PGetCompresorRatio", args, null)[0];
            jLConsole.setText(((Double) o).toString());
        } catch (DriverException ex) {
            ex.printStackTrace();
        } catch (UnsupportedDriverOperation ex) {
            ex.printStackTrace();
        }
    }

    @Action
    public void PGetCompresorRelease() {
        try {
            String[] args = new String[2];
            args[0] = "1";
            args[1] = "1";
            Object o = a.exec("PGetCompresorRelease", args, null)[0];
            jLConsole.setText(((Double) o).toString());
        } catch (DriverException ex) {
            ex.printStackTrace();
        } catch (UnsupportedDriverOperation ex) {
            ex.printStackTrace();
        }
    }

    @Action
    public void PGetCompresorSoftknee() {
        try {
            String[] args = new String[2];
            args[0] = "1";
            args[1] = "1";
            Object o = a.exec("PGetCompresorSoftknee", args, null)[0];
            jLConsole.setText(((Double) o).toString());
        } catch (DriverException ex) {
            ex.printStackTrace();
        } catch (UnsupportedDriverOperation ex) {
            ex.printStackTrace();
        }
    }

    @Action
    public void PGetCompresorThreshold() {
        try {
            String[] args = new String[2];
            args[0] = "1";
            args[1] = "1";
            Object o = a.exec("PGetCompresorThreshold", args, null)[0];
            jLConsole.setText(((Double) o).toString());
        } catch (DriverException ex) {
            ex.printStackTrace();
        } catch (UnsupportedDriverOperation ex) {
            ex.printStackTrace();
        }
    }

    @Action
    public void PGetComunicaciones485() {
        try {
            Object o = a.exec("PGetComunicaciones485", null, null)[0];
            jLConsole.setText(((Boolean) o).toString());
        } catch (DriverException ex) {
            ex.printStackTrace();
        } catch (UnsupportedDriverOperation ex) {
            ex.printStackTrace();
        }
    }

    @Action
    public void PGetConfigAtenuadores() {
        try {
            String[] args = new String[2];
            args[0] = "1";
            args[1] = "1";
            Object o = a.exec("PGetConfigAtenuadores", args, null)[0];
            jLConsole.setText(((Boolean) o).toString());
        } catch (DriverException ex) {
            ex.printStackTrace();
        } catch (UnsupportedDriverOperation ex) {
            ex.printStackTrace();
        }
    }

    @Action
    public void PGetConfigCierres() {
        try {
            String[] args = new String[2];
            args[0] = "1";
            args[1] = "1";
            Object o = a.exec("PGetConfigCierres", args, null)[0];
            jLConsole.setText(((Map<String, Boolean>) o).toString());
        } catch (DriverException ex) {
            ex.printStackTrace();
        } catch (UnsupportedDriverOperation ex) {
            ex.printStackTrace();
        }
    }

    @Action
    public void PGetConfigGestionAutomaticaMicrofonos() {
        try {
            Object o = a.exec("PGetConfigGestionAutomaticaMicrofonos", null, null)[0];
            jLConsole.setText(((Boolean) o).toString());
        } catch (DriverException ex) {
            ex.printStackTrace();
        } catch (UnsupportedDriverOperation ex) {
            ex.printStackTrace();
        }
    }

    @Action
    public void PGetDatoDSP() {
        try {
            String[] args = new String[2];
            args[0] = "1";
            args[1] = "1";
            Object o = a.exec("PGetDatoDSP", args, null)[0];
            jLConsole.setText(((Double) o).toString());
        } catch (DriverException ex) {
            ex.printStackTrace();
        } catch (UnsupportedDriverOperation ex) {
            ex.printStackTrace();
        }
    }

    @Action
    public void PGetGananciaCFE() {
        try {
            String[] args = new String[2];
            args[0] = "1";
            args[1] = "1";
            Object o = a.exec("PGetGananciaCFE", args, null)[0];
            jLConsole.setText(((Double) o).toString());
        } catch (DriverException ex) {
            ex.printStackTrace();
        } catch (UnsupportedDriverOperation ex) {
            ex.printStackTrace();
        }
    }

    @Action
    public void PGetGananciaCFS() {
        try {
            String[] args = new String[2];
            args[0] = "1";
            args[1] = "1";
            Object o = a.exec("PGetGananciaCFS", args, null)[0];
            jLConsole.setText(((Double) o).toString());
        } catch (DriverException ex) {
            ex.printStackTrace();
        } catch (UnsupportedDriverOperation ex) {
            ex.printStackTrace();
        }
    }

    @Action
    public void PGetLimitadorAttack() {
        try {
            String[] args = new String[2];
            args[0] = "1";
            args[1] = "1";
            Object o = a.exec("PGetLimitadorAttack", args, null)[0];
            jLConsole.setText(((Double) o).toString());
        } catch (DriverException ex) {
            ex.printStackTrace();
        } catch (UnsupportedDriverOperation ex) {
            ex.printStackTrace();
        }
    }

    @Action
    public void PGetLimitadorBypass() {
        try {
            String[] args = new String[2];
            args[0] = "1";
            args[1] = "1";
            Object o = a.exec("PGetLimitadorBypass", args, null)[0];
            jLConsole.setText(((Double) o).toString());
        } catch (DriverException ex) {
            ex.printStackTrace();
        } catch (UnsupportedDriverOperation ex) {
            ex.printStackTrace();
        }
    }

    @Action
    public void PGetLimitadorRatio() {
        try {
            String[] args = new String[2];
            args[0] = "1";
            args[1] = "1";
            Object o = a.exec("PGetLimitadorRatio", args, null)[0];
            jLConsole.setText(((Double) o).toString());
        } catch (DriverException ex) {
            ex.printStackTrace();
        } catch (UnsupportedDriverOperation ex) {
            ex.printStackTrace();
        }
    }

    @Action
    public void PGetLimitadorRelease() {
        try {
            String[] args = new String[2];
            args[0] = "1";
            args[1] = "1";
            Object o = a.exec("PGetLimitadorRelease", args, null)[0];
            jLConsole.setText(((Double) o).toString());
        } catch (DriverException ex) {
            ex.printStackTrace();
        } catch (UnsupportedDriverOperation ex) {
            ex.printStackTrace();
        }
    }

    @Action
    public void PGetLimitadorSoftknee() {
        try {
            String[] args = new String[2];
            args[0] = "1";
            args[1] = "1";
            Object o = a.exec("PGetLimitadorSoftknee", args, null)[0];
            jLConsole.setText(((Double) o).toString());
        } catch (DriverException ex) {
            ex.printStackTrace();
        } catch (UnsupportedDriverOperation ex) {
            ex.printStackTrace();
        }
    }

    @Action
    public void PGetLimitadorThreshold() {
        try {
            String[] args = new String[2];
            args[0] = "1";
            args[1] = "1";
            Object o = a.exec("PGetLimitadorThreshold", args, null)[0];
            jLConsole.setText(((Double) o).toString());
        } catch (DriverException ex) {
            ex.printStackTrace();
        } catch (UnsupportedDriverOperation ex) {
            ex.printStackTrace();
        }
    }

    @Action
    public void PGetMP3() {
        try {
            String[] args = new String[2];
            args[0] = "1";
            args[1] = "1";
            Object o = a.exec("PGetMP3", args, null)[0];
            jLConsole.setText(((Map<String, String>) o).toString());
        } catch (DriverException ex) {
            ex.printStackTrace();
        } catch (UnsupportedDriverOperation ex) {
            ex.printStackTrace();
        }
    }

    @Action
    public void PGetMP3In() {
        try {
            String[] args = new String[2];
            args[0] = "1";
            args[1] = "1";
            Object o = a.exec("PGetMP3In", args, null)[0];
            jLConsole.setText(((Boolean) o).toString());
        } catch (DriverException ex) {
            ex.printStackTrace();
        } catch (UnsupportedDriverOperation ex) {
            ex.printStackTrace();
        }
    }

    @Action
    public void PGetModExpansionIn() {
        try {
            String[] args = new String[2];
            args[0] = "1";
            args[1] = "1";
            Object o = a.exec("PGetModExpansionIn", args, null)[0];
            jLConsole.setText(((Boolean) o).toString());
        } catch (DriverException ex) {
            ex.printStackTrace();
        } catch (UnsupportedDriverOperation ex) {
            ex.printStackTrace();
        }
    }
//

    @Action
    public void PGetRxSubMap() {
        try {
            String[] args = new String[2];
            args[0] = "1";
            args[1] = "1";
            Object o = a.exec("PGetRxSubMap", args, null)[0];
            jLConsole.setText(((Double) o).toString());
        } catch (DriverException ex) {
            ex.printStackTrace();
        } catch (UnsupportedDriverOperation ex) {
            ex.printStackTrace();
        }
    }

    @Action
    public void PGetSDIn() {
        try {
            String[] args = new String[2];
            args[0] = "1";
            args[1] = "1";
            Object o = a.exec("PGetSDIn", args, null)[0];
            jLConsole.setText(((Boolean) o).toString());
        } catch (DriverException ex) {
            ex.printStackTrace();
        } catch (UnsupportedDriverOperation ex) {
            ex.printStackTrace();
        }
    }

    @Action
    public void PGetSDProtect() {
        try {
            String[] args = new String[2];
            args[0] = "1";
            args[1] = "1";
            Object o = a.exec("PGetSDProtect", args, null)[0];
            jLConsole.setText(((Boolean) o).toString());
        } catch (DriverException ex) {
            ex.printStackTrace();
        } catch (UnsupportedDriverOperation ex) {
            ex.printStackTrace();
        }
    }

    @Action
    public void PGetSalida() {
        try {
            String[] args = new String[2];
            args[0] = "1";
            args[1] = "1";
            Object o = a.exec("PGetSalida", args, null)[0];
            jLConsole.setText(((Double) o).toString());
        } catch (DriverException ex) {
            ex.printStackTrace();
        } catch (UnsupportedDriverOperation ex) {
            ex.printStackTrace();
        }
    }

    @Action
    public void PGetTemperatura() {
        try {
            String[] args = new String[2];
            args[0] = "1";
            args[1] = "1";
            Object o = a.exec("PGetTemperatura", args, null)[0];
            jLConsole.setText(((Map<String, String>) o).toString());
        } catch (DriverException ex) {
            ex.printStackTrace();
        } catch (UnsupportedDriverOperation ex) {
            ex.printStackTrace();
        }
    }

    @Action
    public void PGetTono() {
        try {
            String[] args = new String[2];
            args[0] = "1";
            args[1] = "1";
            Object o = a.exec("PGetTono", args, null)[0];
            jLConsole.setText(((Double) o).toString());
        } catch (DriverException ex) {
            ex.printStackTrace();
        } catch (UnsupportedDriverOperation ex) {
            ex.printStackTrace();
        }
    }

    @Action
    public void PGetTonoFrec() {
        try {
            String[] args = new String[2];
            args[0] = "1";
            args[1] = "1";
            Object o = a.exec("PGetTonoFrec", args, null)[0];
            jLConsole.setText(((Double) o).toString());
        } catch (DriverException ex) {
            ex.printStackTrace();
        } catch (UnsupportedDriverOperation ex) {
            ex.printStackTrace();
        }
    }

    @Action
    public void PGetTonoMaster() {
        try {
            String[] args = new String[2];
            args[0] = "1";
            args[1] = "1";
            Object o = a.exec("PGetTonoMaster", args, null)[0];
            jLConsole.setText(((Double) o).toString());
        } catch (DriverException ex) {
            ex.printStackTrace();
        } catch (UnsupportedDriverOperation ex) {
            ex.printStackTrace();
        }
    }

    @Action
    public void PGetTxSubMap() {
        try {
            String[] args = new String[2];
            args[0] = "1";
            args[1] = "1";
            Object o = a.exec("PGetTxSubMap", args, null)[0];
            jLConsole.setText(((Double) o).toString());
        } catch (DriverException ex) {
            ex.printStackTrace();
        } catch (UnsupportedDriverOperation ex) {
            ex.printStackTrace();
        }
    }

    @Action
    public void PGetVumetroCE() {
        try {
            String[] args = new String[2];
            args[0] = "1";
            args[1] = "1";
            Object o = a.exec("PGetVumetroCE", args, null)[0];
            jLConsole.setText(((Double) o).toString());
        } catch (DriverException ex) {
            ex.printStackTrace();
        } catch (UnsupportedDriverOperation ex) {
            ex.printStackTrace();
        }
    }

    @Action
    public void PGetVumetroCS() {
        try {
            String[] args = new String[2];
            args[0] = "1";
            args[1] = "1";
            Object o = a.exec("PGetVumetroCS", args, null)[0];
            jLConsole.setText(((Double) o).toString());
        } catch (DriverException ex) {
            ex.printStackTrace();
        } catch (UnsupportedDriverOperation ex) {
            ex.printStackTrace();
        }
    }

    @Action
    public void PSetAmplificador() {
        try {
            String[] args = new String[1];
            args[0] = "True";
            jTConsole.setText(args[0]);
            Object o = a.exec("PSetAmplificador", args, null)[0];
            jLConsole.setText(ZESStatus.return2String((Integer) o).toString());
        } catch (DriverException ex) {
            ex.printStackTrace();
        } catch (UnsupportedDriverOperation ex) {
            ex.printStackTrace();
        }
    }

    @Action
    public void PSetAtenuador24V() {
        try {
            String[] args = new String[1];
            args[0] = "True";
            jTConsole.setText(args[0]);
            Object o = a.exec("PSetAtenuador24V", args, null)[0];
            jLConsole.setText(ZESStatus.return2String((Integer) o).toString());
        } catch (DriverException ex) {
            ex.printStackTrace();
        } catch (UnsupportedDriverOperation ex) {
            ex.printStackTrace();
        }
    }

    @Action
    public void PSetBundleEntrada() {
        try {
            String[] args = new String[2];
            args[0] = "1";
            args[1] = "1";
            Object o = a.exec("PSetBundleEntrada", args, null)[0];
            jLConsole.setText(ZESStatus.return2String((Integer) o).toString());
        } catch (DriverException ex) {
            ex.printStackTrace();
        } catch (UnsupportedDriverOperation ex) {
            ex.printStackTrace();
        }
    }

    @Action
    public void PSetBundleSalida() {
        try {
            String[] args = new String[2];
            args[0] = "1";
            args[1] = "1";
            Object o = a.exec("PSetBundleSalida", args, null)[0];
            jLConsole.setText(ZESStatus.return2String((Integer) o).toString());
        } catch (DriverException ex) {
            ex.printStackTrace();
        } catch (UnsupportedDriverOperation ex) {
            ex.printStackTrace();
        }
    }

    @Action
    public void PSetCierre() {
        try {
            String[] args = new String[2];
            args[0] = "1";
            args[1] = "1";
            Object o = a.exec("PSetCierre", args, null)[0];
            jLConsole.setText(ZESStatus.return2String((Integer) o).toString());
        } catch (DriverException ex) {
            ex.printStackTrace();
        } catch (UnsupportedDriverOperation ex) {
            ex.printStackTrace();
        }
    }

    @Action
    public void PSetComunicaciones485() {
        try {
            String[] args = new String[2];
            args[0] = "1";
            args[1] = "1";
            Object o = a.exec("PSetComunicaciones485", args, null)[0];
            jLConsole.setText(ZESStatus.return2String((Integer) o).toString());
        } catch (DriverException ex) {
            ex.printStackTrace();
        } catch (UnsupportedDriverOperation ex) {
            ex.printStackTrace();
        }
    }

    @Action
    public void PSetConfigAtenuadores() {
        try {
            String[] args = new String[2];
            args[0] = "1";
            args[1] = "1";
            Object o = a.exec("PSetConfigAtenuadores", args, null)[0];
            jLConsole.setText(ZESStatus.return2String((Integer) o).toString());
        } catch (DriverException ex) {
            ex.printStackTrace();
        } catch (UnsupportedDriverOperation ex) {
            ex.printStackTrace();
        }
    }

    @Action
    public void PSetConfigCierres() {
        try {
            String[] args = new String[2];
            args[0] = "1";
            args[1] = "1";
            Object o = a.exec("PSetConfigCierres", args, null)[0];
            jLConsole.setText(ZESStatus.return2String((Integer) o).toString());
        } catch (DriverException ex) {
            ex.printStackTrace();
        } catch (UnsupportedDriverOperation ex) {
            ex.printStackTrace();
        }
    }

    @Action
    public void PSetConfigGestionAutomaticaMicrofonos() {
        try {
            String[] args = new String[2];
            args[0] = "1";
            args[1] = "1";
            Object o = a.exec("PSetConfigGestionAutomaticaMicrofonos", args, null)[0];
            jLConsole.setText(ZESStatus.return2String((Integer) o).toString());
        } catch (DriverException ex) {
            ex.printStackTrace();
        } catch (UnsupportedDriverOperation ex) {
            ex.printStackTrace();
        }
    }

    @Action
    public void PSetDatoDSP() {
        try {
            String[] args = new String[2];
            args[0] = "1";
            args[1] = "1";
            Object o = a.exec("PSetDatoDSP", args, null)[0];
            jLConsole.setText(ZESStatus.return2String((Integer) o).toString());
        } catch (DriverException ex) {
            ex.printStackTrace();
        } catch (UnsupportedDriverOperation ex) {
            ex.printStackTrace();
        }
    }

    @Action
    public void PSetGananciaCFE() {
        try {
            String[] args = new String[2];
            args[0] = "1";
            args[1] = "1";
            Object o = a.exec("PSetGananciaCFE", args, null)[0];
            jLConsole.setText(ZESStatus.return2String((Integer) o).toString());
        } catch (DriverException ex) {
            ex.printStackTrace();
        } catch (UnsupportedDriverOperation ex) {
            ex.printStackTrace();
        }
    }

    @Action
    public void PSetGananciaCFS() {
        try {
            String[] args = new String[2];
            args[0] = "1";
            args[1] = "1";
            Object o = a.exec("PSetGananciaCFS", args, null)[0];
            jLConsole.setText(ZESStatus.return2String((Integer) o).toString());
        } catch (DriverException ex) {
            ex.printStackTrace();
        } catch (UnsupportedDriverOperation ex) {
            ex.printStackTrace();
        }
    }

    @Action
    public void PSetMP3() {
        try {
            String[] args = new String[2];
            args[0] = "1";
            args[1] = "1";
            Object o = a.exec("PSetMP3", args, null)[0];
            jLConsole.setText(ZESStatus.return2String((Integer) o).toString());
        } catch (DriverException ex) {
            ex.printStackTrace();
        } catch (UnsupportedDriverOperation ex) {
            ex.printStackTrace();
        }
    }

    @Action
    public void PSetPreset() {
        try {
            String[] args = new String[2];
            args[0] = "1";
            args[1] = "1";
            Object o = a.exec("PSetPreset", args, null)[0];
            jLConsole.setText(ZESStatus.return2String((Integer) o).toString());
        } catch (DriverException ex) {
            ex.printStackTrace();
        } catch (UnsupportedDriverOperation ex) {
            ex.printStackTrace();
        }
    }

    @Action
    public void PSetReset() {
        try {
            String[] args = new String[2];
            args[0] = "1";
            args[1] = "1";
            Object o = a.exec("PSetReset", args, null)[0];
            jLConsole.setText(ZESStatus.return2String((Integer) o).toString());
        } catch (DriverException ex) {
            ex.printStackTrace();
        } catch (UnsupportedDriverOperation ex) {
            ex.printStackTrace();
        }
    }

    @Action
    public void PSetRxSubMap() {
        try {
            String[] args = new String[2];
            args[0] = "1";
            args[1] = "1";
            Object o = a.exec("PSetRxSubMap", args, null)[0];
            jLConsole.setText(ZESStatus.return2String((Integer) o).toString());
        } catch (DriverException ex) {
            ex.printStackTrace();
        } catch (UnsupportedDriverOperation ex) {
            ex.printStackTrace();
        }
    }

    @Action
    public void PSetSalida() {
        try {
            String[] args = new String[2];
            args[0] = "1";
            args[1] = "1";
            Object o = a.exec("PSetSalida", args, null)[0];
            jLConsole.setText(ZESStatus.return2String((Integer) o).toString());
        } catch (DriverException ex) {
            ex.printStackTrace();
        } catch (UnsupportedDriverOperation ex) {
            ex.printStackTrace();
        }
    }

    @Action
    public void PSetTono() {
        try {
            String[] args = new String[2];
            args[0] = "1";
            args[1] = "1";
            Object o = a.exec("PSetTono", args, null)[0];
            jLConsole.setText(ZESStatus.return2String((Integer) o).toString());
        } catch (DriverException ex) {
            ex.printStackTrace();
        } catch (UnsupportedDriverOperation ex) {
            ex.printStackTrace();
        }
    }

    @Action
    public void PSetTonoFrec() {
        try {
            String[] args = new String[2];
            args[0] = "1";
            args[1] = "1";
            Object o = a.exec("PSetTonoFrec", args, null)[0];
            jLConsole.setText(ZESStatus.return2String((Integer) o).toString());
        } catch (DriverException ex) {
            ex.printStackTrace();
        } catch (UnsupportedDriverOperation ex) {
            ex.printStackTrace();
        }
    }

    @Action
    public void PSetTonoMaster() {
        try {
            String[] args = new String[2];
            args[0] = "1";
            args[1] = "1";
            Object o = a.exec("PSetTonoMaster", args, null)[0];
            jLConsole.setText(ZESStatus.return2String((Integer) o).toString());
        } catch (DriverException ex) {
            ex.printStackTrace();
        } catch (UnsupportedDriverOperation ex) {
            ex.printStackTrace();
        }
    }

    @Action
    public void PSetTxSubMap() {
        try {
            String[] args = new String[2];
            args[0] = "1";
            args[1] = "1";
            Object o = a.exec("PSetTxSubMap", args, null)[0];
            jLConsole.setText(ZESStatus.return2String((Integer) o).toString());
        } catch (DriverException ex) {
            ex.printStackTrace();
        } catch (UnsupportedDriverOperation ex) {
            ex.printStackTrace();
        }
    }

//    @Action
//    public void PStart() {
//        try {
//            String[] args = new String[2];
//            args[0] = "1";
//            args[1] = "1";
//            Object o = a.exec("PStart", args, null)[0];
//            jLConsole.setText(ZESStatus.return2String((Integer) o).toString());
//        } catch (DriverException ex) {
//            ex.printStackTrace();
//        } catch (UnsupportedDriverOperation ex) {
//            ex.printStackTrace();
//        }
//    }
}
